name: üß™ Test & Validate

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: L·∫•y m√£ ngu·ªìn
        uses: actions/checkout@v3

      - name: C√†i ƒë·∫∑t ShellCheck
        run: |
          if command -v apt-get &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y shellcheck
          elif command -v brew &> /dev/null; then
            brew install shellcheck
          fi

      - name: Ki·ªÉm tra l·ªói Bash Script
        run: |
          find . -name "*.sh" | xargs -n 1 shellcheck || true

      - name: C√†i ƒë·∫∑t Bats + Th∆∞ vi·ªán h·ªó tr·ª£
        run: |
          git clone https://github.com/bats-core/bats-core.git
          sudo ./bats-core/install.sh /usr/local

          mkdir -p tests/test_helper
          git clone https://github.com/bats-core/bats-support tests/test_helper/bats-support
          git clone https://github.com/bats-core/bats-assert tests/test_helper/bats-assert

      - name: C√†i ƒë·∫∑t Rclone
        run: |
          curl https://rclone.org/install.sh | sudo bash

      - name: Ki·ªÉm tra quy·ªÅn th·ª±c thi script
        run: |
          find shared/scripts -name "*.sh" -exec chmod +x {} \;
          chmod +x main.sh

      - name: Ki·ªÉm tra c·∫•u h√¨nh docker compose (ch·ªâ Linux)
        if: runner.os == 'Linux'
        run: docker compose -f webserver/nginx/docker-compose.yml config
        

      - name: Ki·ªÉm tra ƒë·ªãnh d·∫°ng file .env
        run: |
          find sites -name ".env" -exec grep -E '^MYSQL_(DATABASE|USER|PASSWORD)=' {} \; || echo "Kh√¥ng c√≥ file .env n√†o ƒë·ªÉ ki·ªÉm tra"

      - name: Ki·ªÉm tra bi·∫øn b·∫Øt bu·ªôc trong config.sh
        run: |
          required_vars=(SITES_DIR RCLONE_CONFIG_FILE PHP_USER)
          for var in "${required_vars[@]}"; do
            grep -q "$var=" shared/config/config.sh || (echo "‚ùå Thi·∫øu bi·∫øn: $var trong config.sh" && exit 1)
          done

      - name: Ch·∫°y Bats Test
        run: bats tests/