name: Dev Build

on:
  push:
    branches:
      - 'dev'

permissions:
  contents: write

jobs:
  build-and-release:
    name: üì¶ Build & Create wp-docker-dev.zip
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout source code
        uses: actions/checkout@v3
        with:
          ref: dev
          fetch-depth: 0

      - name: ‚¨áÔ∏è Fetch version from main branch
        run: |
          git fetch origin main
          main_version=$(git show origin/main:src/version.txt)
          echo "$main_version" > tmp_main_version.txt
          echo "MAIN_VERSION=$main_version" >> $GITHUB_ENV

      - name: üßÆ Calculate DEV_VERSION & update files
        run: |
          git fetch origin main
          main_version=$(git show origin/main:src/version.txt)
          timestamp=$(date +%Y%m%d%H%M%S)
          DEV_VERSION="${main_version}-dev-${timestamp}"
          echo "$DEV_VERSION" > version.txt
          echo "$DEV_VERSION" > latest_version_dev.txt
          echo "DEV_VERSION=$DEV_VERSION" >> $GITHUB_ENV

          mv version.txt latest_version_dev.txt src/
          git add src/version.txt src/latest_version_dev.txt

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git commit -m "üîÑ Update latest_version_dev.txt to $DEV_VERSION"
          git push origin HEAD:dev

          # ‚ö†Ô∏è Force update the 'nightly' tag to point to current dev commit
          git tag -f nightly
          git push origin -f nightly

      - name: üßº Clean up & package
        run: |
          mkdir -p dist
          mkdir -p wp-docker
          cp -r src/* wp-docker/
          cd wp-docker
          zip -r ../dist/wp-docker-dev.zip . \
            -x "*.git*" "*.github*" "*.vscode*" "logs/*" "tmp/*" "tests/*" "sites/" \
            -x "*.DS_Store" "__MACOSX"
          cd ..

      - name: üöÄ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "wp-docker-dev Release"
          tag_name: "nightly"
          body: "Release for development version: ${{ env.DEV_VERSION }}"
          files: dist/wp-docker-dev.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
