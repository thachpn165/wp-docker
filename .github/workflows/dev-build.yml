name: Dev Build

on:
  push:
    branches:
      - 'dev'

permissions:
  contents: write

jobs:
  build-and-release:
    name: 📦 Build & Create wp-docker-dev.zip
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout source code
        uses: actions/checkout@v3

      - name: 🧮 Calculate DEV_VERSION and write version.txt
        run: |
          git fetch origin main
          git checkout origin/main -- src/version.txt
          main_version=$(cat src/version.txt)
          timestamp=$(date +%Y%m%d%H%M%S)
          DEV_VERSION="${main_version}-dev-${timestamp}"
          echo "$DEV_VERSION" > wp-docker/version.txt
          echo "DEV_VERSION=$DEV_VERSION" >> $GITHUB_ENV

      - name: 🧼 Clean up & package
        run: |
          mkdir -p dist
          mkdir wp-docker
          cp -r src/* wp-docker/
          cd wp-docker
          zip -r ../dist/wp-docker-dev.zip . \
            -x "*.git*" "*.github*" "*.vscode*" "logs/*" "tmp/*" "tests/*" "sites/" \
            -x "*.DS_Store" "__MACOSX"
          cd ..

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "wp-docker-dev Release"
          tag_name: "dev"
          files: dist/wp-docker-dev.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-version-file:
    name: ✍️ Update latest_version_dev.txt
    runs-on: ubuntu-latest
    needs: build-and-release  # ✅ Ensure this runs only after dev build succeeds

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: dev  # đảm bảo sửa trực tiếp trên nhánh dev

      - name: Update latest_version_dev.txt
        run: |
          echo "$DEV_VERSION" > src/version.txt
          echo "$DEV_VERSION" > latest_version_dev.txt
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add latest_version_dev.txt src/version.txt
          git commit -m "🔄 Update latest_version_dev.txt to $DEV_VERSION"
          git push origin dev
        env:
          DEV_VERSION: ${{ env.DEV_VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}