name: Test

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Install Bats
        run: |
          git clone https://github.com/bats-core/bats-core.git
          sudo ./bats-core/install.sh /usr/local

          - name: üê≥ Install Docker (Linux or macOS)
          run: |
            if [[ "$RUNNER_OS" == "Linux" ]]; then
              echo "üì¶ Installing Docker for Linux..."
        
              sudo apt-get remove -y containerd containerd.io || true
              sudo apt-get autoremove -y
        
              sudo apt-get update
              sudo apt-get install -y \
                apt-transport-https \
                ca-certificates \
                curl \
                gnupg \
                lsb-release
        
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
                sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        
              echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
                https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | \
                sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
        
            elif [[ "$RUNNER_OS" == "macOS" ]]; then
              echo "üçé Installing Docker for macOS..."
        
              # GitHub macOS runners ƒë√£ c√≥ Docker Desktop c√†i s·∫µn nh∆∞ng kh√¥ng kh·ªüi ƒë·ªông s·∫µn
              # C√†i l·∫°i b·∫±ng brew (n·∫øu c·∫ßn)
              brew install --cask docker || true
        
              # Start Docker Desktop in background (n·∫øu ch∆∞a ch·∫°y)
              open -a Docker || true
        
              echo "‚è≥ Waiting for Docker to be available..."
              while ! docker system info > /dev/null 2>&1; do sleep 1; done
        
              echo "‚úÖ Docker is now available on macOS runner."
            else
              echo "‚ùå Unsupported OS: $RUNNER_OS"
              exit 1
            fi
        

      - name: Run Tests
        run: |
          bats tests/**/*.bats 