name: Official Release

on:
  push:
    tags:
<<<<<<< HEAD
      - "v*" # Tự động chạy khi push tag dạng v1.2.3
=======
      - "v*"
      - "latest"
>>>>>>> main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    name: 🚀 Build & Release

    steps:
      - name: 📥 Checkout source code
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: 🔐 Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: 🛠 Update version.txt & force DEBUG_MODE=false
        run: |
<<<<<<< HEAD
          echo "${{ github.ref_name }}" > src/version.txt

      - name: 🛠 Force set DEBUG_MODE to false
        run: |
          CONFIG_FILE="src/shared/config/config.sh"
          if [[ -f "$CONFIG_FILE" ]]; then
            echo "🔧 Updating DEBUG_MODE=false in $CONFIG_FILE"
            sed -i 's/^DEBUG_MODE=.*/DEBUG_MODE="false"/' "$CONFIG_FILE"
            grep DEBUG_MODE "$CONFIG_FILE"
          else
            echo "❌ config.sh not found at $CONFIG_FILE"
            exit 1
          fi

      - name: 💾 Commit and Push version files
        run: |
          git add src/version.txt -f
          git add "src/shared/config/config.sh"
          git commit -m "🔖 Update version.txt to ${{ github.ref_name }}"
=======
          VERSION="${{ github.ref_name }}"
          echo "$VERSION" > src/version.txt
          sed -i 's/^DEBUG_MODE=.*/DEBUG_MODE="false"/' src/shared/config/config.sh
          git add src/version.txt src/shared/config/config.sh
          git commit -m "🔖 Prepare release: $VERSION"
>>>>>>> main
          git push origin HEAD:main

      - name: 🧼 Cleanup & Build wp-docker.zip
        run: |
          mkdir -p dist wp-docker
          cp -r src/* wp-docker/
          cd wp-docker
          zip -r ../dist/wp-docker.zip . \
            -x "*.git*" "*.github*" "*.vscode*" "logs/*" "tmp/*" "tests/*" "sites/" \
            -x "*.DS_Store" "__MACOSX"
          cd ..

      - name: 🚀 Create GitHub Release (vx.x.x)
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ github.ref_name }}"
          tag_name: "${{ github.ref_name }}"
          files: dist/wp-docker.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔁 Update latest tag to current commit
        run: |
          git tag -f latest
          git push origin -f latest

<<<<<<< HEAD
      - name: 🚀 Create GitHub Release (latest tag)
=======
      - name: 🚀 Create / Update GitHub Release (latest)
>>>>>>> main
        uses: softprops/action-gh-release@v1
        with:
          name: "latest"
          tag_name: "latest"
          files: dist/wp-docker.zip
<<<<<<< HEAD
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
=======
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
>>>>>>> main
