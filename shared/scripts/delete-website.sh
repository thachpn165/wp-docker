#!/bin/bash

# M√†u s·∫Øc terminal
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m' # No Color

# X√°c ƒë·ªãnh th∆∞ m·ª•c ch·ª©a website
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/../../" && pwd)"
SITES_DIR="$PROJECT_ROOT/sites"
PROXY_SCRIPT="$PROJECT_ROOT/nginx-proxy/restart-nginx-proxy.sh"
PROXY_CONF_DIR="$PROJECT_ROOT/nginx-proxy/conf.d"

echo -e "${YELLOW}üìã Danh s√°ch c√°c website c√≥ th·ªÉ x√≥a:${NC}"
ls "$SITES_DIR"
echo ""

read -p "Nh·∫≠p t√™n website c·∫ßn x√≥a: " site_name

# Ki·ªÉm tra xem website c√≥ t·ªìn t·∫°i kh√¥ng
if [ ! -d "$SITES_DIR/$site_name" ]; then
    echo -e "${RED}‚ùå Website '$site_name' kh√¥ng t·ªìn t·∫°i!${NC}"
    exit 1
fi

# L·∫•y th√¥ng tin domain t·ª´ .env c·ªßa website
ENV_FILE="$SITES_DIR/$site_name/.env"
if [ -f "$ENV_FILE" ]; then
    domain=$(grep "DOMAIN=" "$ENV_FILE" | cut -d'=' -f2)
else
    echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y file .env c·ªßa website!${NC}"
    exit 1
fi

SITE_CONF_FILE="$PROXY_CONF_DIR/$site_name.conf"
SSL_DIR="$SITES_DIR/$site_name/nginx/ssl"

# X√°c nh·∫≠n x√≥a
echo -e "${RED}‚ö†Ô∏è B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a website '$site_name' ($domain)? (y/n): ${NC}"
read -r confirm
if [[ ! "$confirm" =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è H·ªßy thao t√°c x√≥a website '${site_name}'.${NC}"
    exit 0
fi

echo -e "${BLUE}üîÑ ƒêang x√≥a website '$site_name'...${NC}"

# D·ª´ng & x√≥a container
cd "$SITES_DIR/$site_name"
docker-compose down
cd "$PROJECT_ROOT"

# X√≥a th∆∞ m·ª•c website
rm -rf "$SITES_DIR/$site_name"
echo -e "${GREEN}‚úÖ Website '$site_name' ƒë√£ b·ªã x√≥a th√†nh c√¥ng!${NC}"

# X√≥a file c·∫•u h√¨nh NGINX c·ªßa website
if [ -f "$SITE_CONF_FILE" ]; then
    echo -e "${YELLOW}üóëÔ∏è ƒêang x√≥a c·∫•u h√¨nh NGINX c·ªßa '$domain'...${NC}"
    rm -f "$SITE_CONF_FILE"
    echo -e "${GREEN}‚úÖ C·∫•u h√¨nh NGINX c·ªßa '$domain' ƒë√£ ƒë∆∞·ª£c x√≥a.${NC}"
else
    echo -e "${RED}‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file c·∫•u h√¨nh $SITE_CONF_FILE. B·ªè qua.${NC}"
fi

# X√≥a ch·ª©ng ch·ªâ SSL n·∫øu t·ªìn t·∫°i
if [ -d "$SSL_DIR" ]; then
    echo -e "${YELLOW}üóëÔ∏è ƒêang x√≥a ch·ª©ng ch·ªâ SSL c·ªßa '$site_name'...${NC}"
    rm -rf "$SSL_DIR"
    echo -e "${GREEN}‚úÖ Ch·ª©ng ch·ªâ SSL c·ªßa '$site_name' ƒë√£ b·ªã x√≥a.${NC}"
else
    echo -e "${RED}‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y ch·ª©ng ch·ªâ SSL c·ªßa '$site_name'. B·ªè qua.${NC}"
fi

# X√≥a m·∫°ng site_network n·∫øu kh√¥ng c√≤n container n√†o ƒëang s·ª≠ d·ª•ng
if docker network inspect site_network >/dev/null 2>&1; then
    echo -e "${YELLOW}üóëÔ∏è ƒêang ki·ªÉm tra v√† x√≥a m·∫°ng site_network c·ªßa '$site_name' n·∫øu kh√¥ng c·∫ßn thi·∫øt...${NC}"
    docker network rm site_network
fi

# Reload NGINX Proxy ƒë·ªÉ c·∫≠p nh·∫≠t l·∫°i c·∫•u h√¨nh
if [ -f "$PROXY_SCRIPT" ]; then
    bash "$PROXY_SCRIPT"
else
    echo -e "${RED}‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y t·∫≠p tin $PROXY_SCRIPT. H√£y ki·ªÉm tra l·∫°i.${NC}"
fi

echo -e "${GREEN}‚úÖ Ho√†n t·∫•t x√≥a website '$site_name'.${NC}"

read -p "Nh·∫•n Enter ƒë·ªÉ quay l·∫°i menu..."
