#!/bin/bash

# Ki·ªÉm tra xem m·ªôt port c√≥ ƒëang ƒë∆∞·ª£c s·ª≠ d·ª•ng kh√¥ng
is_port_in_use() {
    local port="$1"
    netstat -tuln | grep -q ":$port "
}

# Ki·ªÉm tra k·∫øt n·ªëi Internet
is_internet_connected() {
    ping -c 1 8.8.8.8 &> /dev/null
}

# Ki·ªÉm tra xem m·ªôt domain c√≥ th·ªÉ truy c·∫≠p kh√¥ng
is_domain_resolvable() {
    local domain="$1"
    if command -v timeout &>/dev/null; then
    timeout 3 nslookup "$domain" &> /dev/null
    else
    nslookup "$domain" | grep -q "Name:"
    fi

}

# H√†m ki·ªÉm tra m·ªôt m·∫°ng Docker c√≥ t·ªìn t·∫°i kh√¥ng
is_network_exists() {
    local network_name="$1"
    if docker network ls --format '{{.Name}}' | grep -q "^${network_name}$"; then
        return 0  # Network t·ªìn t·∫°i
    else
        return 1  # Network kh√¥ng t·ªìn t·∫°i
    fi
}

# Thi·∫øt l·∫≠p network Docker
create_docker_network() {
    local network_name="$1"
    if ! docker network ls | grep -q "$network_name"; then
        echo -e "${YELLOW}üîß ƒêang t·∫°o m·∫°ng $network_name...${NC}"
        docker network create "$network_name"
        echo -e "${GREEN}‚úÖ M·∫°ng $network_name ƒë√£ ƒë∆∞·ª£c t·∫°o.${NC}"
    else
        echo -e "${GREEN}‚úÖ M·∫°ng $network_name ƒë√£ t·ªìn t·∫°i.${NC}"
    fi
}

