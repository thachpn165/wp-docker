#!/bin/bash

# Ki·ªÉm tra xem m·ªôt port c√≥ ƒëang ƒë∆∞·ª£c s·ª≠ d·ª•ng kh√¥ng
is_port_in_use() {
    local port="$1"
    netstat -tuln | grep -q ":$port "
}

# Ki·ªÉm tra k·∫øt n·ªëi Internet
is_internet_connected() {
    ping -c 1 8.8.8.8 &> /dev/null
}

# Ki·ªÉm tra xem m·ªôt domain c√≥ th·ªÉ truy c·∫≠p kh√¥ng
is_domain_resolvable() {
    local domain="$1"
    if command -v timeout &>/dev/null; then
    timeout 3 nslookup "$domain" &> /dev/null
    else
    nslookup "$domain" | grep -q "Name:"
    fi

}


# Restart NGINX Proxy
restart_nginx_proxy() {
    echo -e "${YELLOW}üîÑ ƒêang kh·ªüi ƒë·ªông l·∫°i NGINX Proxy v·ªõi docker-compose.override.yml...${NC}"

    # Di chuy·ªÉn v√†o th∆∞ m·ª•c ch·ª©a docker-compose.yml
    cd "$NGINX_PROXY_DIR" || {
        echo -e "${RED}‚ùå L·ªói: Kh√¥ng th·ªÉ truy c·∫≠p th∆∞ m·ª•c $NGINX_PROXY_DIR${NC}"
        return 1
    }

    # D·ª´ng t·∫•t c·∫£ container trong docker-compose.yml v√† override
    echo -e "${BLUE}üõë ƒêang d·ª´ng t·∫•t c·∫£ container...${NC}"
    docker compose down

    # Ch·ªù 2 gi√¢y ƒë·ªÉ ƒë·∫£m b·∫£o container d·ª´ng ho√†n to√†n (tr√°nh l·ªói mount)
    sleep 2

    # Kh·ªüi ƒë·ªông l·∫°i Docker Compose m√† kh√¥ng ch·ªâ ƒë·ªãnh -f, ƒë·ªÉ n√≥ t·ª± ƒë·ªông load override
    echo -e "${GREEN}üöÄ ƒêang kh·ªüi ƒë·ªông l·∫°i container NGINX Proxy...${NC}"
    docker compose up -d

    # Ki·ªÉm tra xem container c√≥ kh·ªüi ƒë·ªông th√†nh c√¥ng kh√¥ng
    if docker ps --format '{{.Names}}' | grep -q "^$NGINX_PROXY_CONTAINER$"; then
        echo -e "${GREEN}‚úÖ NGINX Proxy ƒë√£ ƒë∆∞·ª£c kh·ªüi ƒë·ªông l·∫°i th√†nh c√¥ng.${NC}"
    else
        echo -e "${RED}‚ùå L·ªói: Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông l·∫°i NGINX Proxy.${NC}"
    fi

    # Quay v·ªÅ th∆∞ m·ª•c c≈© (n·∫øu c·∫ßn)
    cd - > /dev/null 2>&1
}



# H√†m ki·ªÉm tra m·ªôt m·∫°ng Docker c√≥ t·ªìn t·∫°i kh√¥ng
is_network_exists() {
    local network_name="$1"
    if docker network ls --format '{{.Name}}' | grep -q "^${network_name}$"; then
        return 0  # Network t·ªìn t·∫°i
    else
        return 1  # Network kh√¥ng t·ªìn t·∫°i
    fi
}

# Thi·∫øt l·∫≠p network Docker
create_docker_network() {
    local network_name="$1"
    if ! docker network ls | grep -q "$network_name"; then
        echo -e "${YELLOW}üîß ƒêang t·∫°o m·∫°ng $network_name...${NC}"
        docker network create "$network_name"
        echo -e "${GREEN}‚úÖ M·∫°ng $network_name ƒë√£ ƒë∆∞·ª£c t·∫°o.${NC}"
    else
        echo -e "${GREEN}‚úÖ M·∫°ng $network_name ƒë√£ t·ªìn t·∫°i.${NC}"
    fi
}

