# =====================================
# üåê nginx_utils.sh ‚Äì C√°c h√†m ti·ªán √≠ch li√™n quan ƒë·∫øn NGINX Proxy
# =====================================
update_nginx_override_mounts() {
    local site_name="$1"
    local OVERRIDE_FILE="$NGINX_PROXY_DIR/docker-compose.override.yml"
    local MOUNT_ENTRY="      - ../../sites/$site_name/wordpress:/var/www/$site_name"
    local MOUNT_LOGS="      - ../../sites/$site_name/logs:/var/www/logs/$site_name"

    # N·∫øu ch∆∞a t·ªìn t·∫°i, t·∫°o file m·ªõi
    if [ ! -f "$OVERRIDE_FILE" ]; then
        echo -e "${YELLOW}üìÑ T·∫°o m·ªõi docker-compose.override.yml...${NC}"
        cat > "$OVERRIDE_FILE" <<EOF
services:
  nginx-proxy:
    volumes:
$MOUNT_ENTRY
$MOUNT_LOGS
EOF
        echo -e "${GREEN}‚úÖ File docker-compose.override.yml ƒë√£ ƒë∆∞·ª£c t·∫°o v√† c·∫•u h√¨nh.${NC}"
        return
    fi

    # Ki·ªÉm tra v√† th√™m MOUNT_ENTRY n·∫øu c·∫ßn
    if ! grep -Fxq "$MOUNT_ENTRY" "$OVERRIDE_FILE"; then
        echo "$MOUNT_ENTRY" | tee -a "$OVERRIDE_FILE" > /dev/null
        echo -e "${GREEN}‚ûï ƒê√£ th√™m mount source: $MOUNT_ENTRY${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Mount source ƒë√£ t·ªìn t·∫°i: $MOUNT_ENTRY${NC}"
    fi

    # Ki·ªÉm tra v√† th√™m MOUNT_LOGS n·∫øu c·∫ßn
    if ! grep -Fxq "$MOUNT_LOGS" "$OVERRIDE_FILE"; then
        echo "$MOUNT_LOGS" | tee -a "$OVERRIDE_FILE" > /dev/null
        echo -e "${GREEN}‚ûï ƒê√£ th√™m mount logs: $MOUNT_LOGS${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Mount logs ƒë√£ t·ªìn t·∫°i: $MOUNT_LOGS${NC}"
    fi
}


# üîÅ Restart NGINX Proxy (d√πng khi thay ƒë·ªïi docker-compose, mount volume, v.v)
nginx_restart() {
  echo -e "${YELLOW}üîÅ ƒêang kh·ªüi ƒë·ªông l·∫°i container NGINX Proxy...${NC}"
  docker restart "$NGINX_PROXY_CONTAINER"
  if [[ $? -eq 0 ]]; then
    echo -e "${GREEN}‚úÖ ƒê√£ restart NGINX Proxy th√†nh c√¥ng.${NC}"
  else
    echo -e "${RED}‚ùå L·ªói khi restart NGINX Proxy.${NC}"
  fi
}

# üîÑ Reload NGINX (d√πng khi thay ƒë·ªïi file config/nginx.conf/nginx site)
nginx_reload() {
  echo -e "${YELLOW}üîÑ ƒêang reload NGINX Proxy...${NC}"
  docker exec "$NGINX_PROXY_CONTAINER" nginx -s reload 2>/dev/null
  if [[ $? -eq 0 ]]; then
    echo -e "${GREEN}‚úÖ ƒê√£ reload NGINX th√†nh c√¥ng.${NC}"
  else
    echo -e "${RED}‚ö†Ô∏è L·ªói khi reload. G·ª£i √Ω: Ki·ªÉm tra log b·∫±ng 'docker logs $NGINX_PROXY_CONTAINER'${NC}"
  fi
}