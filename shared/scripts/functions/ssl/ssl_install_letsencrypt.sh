ssl_install_lets_encrypt() {
    select_website
    if [ -z "$SITE_NAME" ]; then
        echo -e "${RED}‚ùå Kh√¥ng c√≥ website n√†o ƒë∆∞·ª£c ch·ªçn.${NC}"
        return 1
    fi

    local ENV_FILE="$SITES_DIR/$SITE_NAME/.env"
    if [ ! -f "$ENV_FILE" ]; then
        echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y file .env cho site $SITE_NAME${NC}"
        return 1
    fi

    local DOMAIN=$(fetch_env_variable "$ENV_FILE" "DOMAIN")
    if [ -z "$DOMAIN" ]; then
        echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y bi·∫øn DOMAIN trong .env${NC}"
        return 1
    fi

    echo -e "${BLUE}üåç Domain: ${CYAN}$DOMAIN${NC}"
    echo -e "${YELLOW}üîç ƒêang ki·ªÉm tra certbot...${NC}"

    if ! command -v certbot &> /dev/null; then
        echo -e "${YELLOW}‚ö†Ô∏è certbot ch∆∞a ƒë∆∞·ª£c c√†i. ƒêang ti·∫øn h√†nh c√†i ƒë·∫∑t...${NC}"

        if [[ "$(uname -s)" == "Linux" ]]; then
            if [ -f /etc/debian_version ]; then
                sudo apt update
                sudo apt install -y certbot
            elif [ -f /etc/redhat-release ] || [ -f /etc/centos-release ]; then
                sudo yum install -y certbot
            else
                echo -e "${RED}‚ùå Kh√¥ng h·ªó tr·ª£ h·ªá ƒëi·ªÅu h√†nh n√†y ƒë·ªÉ c√†i certbot.${NC}"
                return 1
            fi
        else
            echo -e "${RED}‚ùå certbot ch·ªâ ƒë∆∞·ª£c h·ªó tr·ª£ t·ª± ƒë·ªông c√†i tr√™n Linux. H√£y c√†i th·ªß c√¥ng tr√™n macOS.${NC}"
            return 1
        fi
    fi

    echo -e "${YELLOW}üì¶ ƒêang y√™u c·∫ßu ch·ª©ng ch·ªâ Let's Encrypt cho $DOMAIN...${NC}"
    sudo certbot certonly --standalone -d "$DOMAIN" --non-interactive --agree-tos -m "admin@$DOMAIN"

    local CERT_PATH="/etc/letsencrypt/live/$DOMAIN/fullchain.pem"
    local KEY_PATH="/etc/letsencrypt/live/$DOMAIN/privkey.pem"

    if [[ ! -f "$CERT_PATH" || ! -f "$KEY_PATH" ]]; then
        echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y ch·ª©ng ch·ªâ sau khi c·∫•p. C√≥ th·ªÉ domain ch∆∞a tr·ªè ƒë√∫ng ho·∫∑c port 80 b·ªã ch·∫∑n.${NC}"
        return 1
    fi

    echo -e "${GREEN}‚úÖ Ch·ª©ng ch·ªâ ƒë√£ ƒë∆∞·ª£c c·∫•p th√†nh c√¥ng t·ª´ Let's Encrypt.${NC}"

    local SSL_DIR="nginx-proxy/ssl"
    mkdir -p "$SSL_DIR"

    local TARGET_CERT="$SSL_DIR/$SITE_NAME.crt"
    local TARGET_KEY="$SSL_DIR/$SITE_NAME.key"

    sudo cp "$CERT_PATH" "$TARGET_CERT"
    sudo cp "$KEY_PATH" "$TARGET_KEY"

    echo -e "${YELLOW}üîÑ Reload NGINX Proxy ƒë·ªÉ √°p d·ª•ng ch·ª©ng ch·ªâ m·ªõi...${NC}"
    docker exec "$NGINX_PROXY_CONTAINER" nginx -s reload

    echo -e "${GREEN}‚úÖ C√†i ƒë·∫∑t ch·ª©ng ch·ªâ Let's Encrypt ho√†n t·∫•t v√† ƒë√£ √°p d·ª•ng cho $SITE_NAME.${NC}"
}
