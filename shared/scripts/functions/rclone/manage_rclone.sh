# H√†m hi·ªÉn th·ªã danh s√°ch storage ƒë√£ thi·∫øt l·∫≠p
rclone_storage_list() {
    local rclone_config="shared/config/rclone/rclone.conf"

    if ! is_file_exist "$rclone_config"; then
        echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y t·∫≠p tin c·∫•u h√¨nh Rclone.${NC}"
        return 1
    fi

    # L·∫•y danh s√°ch storage t·ª´ `rclone.conf` (ho·∫°t ƒë·ªông tr√™n c·∫£ macOS & Linux)
    sed -n 's/^\[\(.*\)\]$/\1/p' "$rclone_config"
}



# H√†m x√≥a storage ƒë√£ thi·∫øt l·∫≠p
rclone_storage_delete() {
    local rclone_config="shared/config/rclone/rclone.conf"

    if ! is_file_exist "$rclone_config"; then
        echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y t·∫≠p tin c·∫•u h√¨nh Rclone.${NC}"
        return 1
    fi

    local storages=($(grep '^\[' "$rclone_config" | tr -d '[]'))

    if [[ ${#storages[@]} -eq 0 ]]; then
        echo -e "${RED}‚ùå Kh√¥ng c√≥ storage n√†o ƒë·ªÉ x√≥a.${NC}"
        return 1
    fi

    echo -e "${BLUE}üìÇ Ch·ªçn storage ƒë·ªÉ x√≥a:${NC}"
    select storage in "${storages[@]}"; do
        if [[ -n "$storage" ]]; then
            sed -i "/^\[$storage\]/,/^$/d" "$rclone_config"
            echo -e "${GREEN}‚úÖ Storage '$storage' ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi c·∫•u h√¨nh.${NC}"
            break
        else
            echo -e "${RED}‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.${NC}"
        fi
    done
}