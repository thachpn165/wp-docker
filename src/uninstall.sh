#!/bin/bash

# =====================================
# ‚ùå uninstall.sh ‚Äì G·ª° c√†i ƒë·∫∑t WP Docker LEMP ho√†n to√†n kh·ªèi h·ªá th·ªëng
# =====================================

set -euo pipefail
CONFIG_FILE="shared/config/config.sh"

# X√°c ƒë·ªãnh ƒë∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi c·ªßa `config.sh`
while [ ! -f "$CONFIG_FILE" ]; do
    CONFIG_FILE="../$CONFIG_FILE"
    if [ "$(pwd)" = "/" ]; then
        echo "‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y config.sh!" >&2
        exit 1
    fi
done

source "$CONFIG_FILE"

BACKUP_DIR="$BASE_DIR/archives/backups_before_remove"
TMP_BACKUP_DIR="$BASE_DIR/tmp"

# üí¨ X√°c nh·∫≠n h√†nh ƒë·ªông t·ª´ ng∆∞·ªùi d√πng
confirm_action() {
  read -rp "‚ùì B·∫°n c√≥ mu·ªën sao l∆∞u l·∫°i to√†n b·ªô website tr∆∞·ªõc khi xo√° kh√¥ng? [y/N]: " confirm
  [[ "$confirm" == "y" || "$confirm" == "Y" ]]
}

# üîç Qu√©t danh s√°ch site t·ª´ th∆∞ m·ª•c sites
get_site_list() {
  find "$SITES_DIR" -mindepth 1 -maxdepth 1 -type d -exec basename {} \;
}

# üíæ Backup to√†n b·ªô site th·ªß c√¥ng v√†o backup_before_remove
backup_all_sites() {
  echo -e "${CYAN}üíæ ƒêang sao l∆∞u to√†n b·ªô site v√†o $BACKUP_DIR...${NC}"
  mkdir -p "$BACKUP_DIR"

  for site in $(get_site_list); do
    echo -e "${BLUE}üì¶ Backup site: $site${NC}"

    site_path="$SITES_DIR/$site"
    env_file="$site_path/.env"
    wordpress_dir="$site_path/wordpress"
    backup_target_dir="$BACKUP_DIR/$site"
    mkdir -p "$backup_target_dir"

    if [[ ! -f "$env_file" ]]; then
      echo -e "${RED}‚ùå B·ªè qua site '$site': kh√¥ng t√¨m th·∫•y file .env${NC}"
      continue
    fi

    # L·∫•y th√¥ng tin DB t·ª´ file .env
    DB_NAME=$(grep '^MYSQL_DATABASE=' "$env_file" | cut -d '=' -f2)
    DB_USER=$(grep '^MYSQL_USER=' "$env_file" | cut -d '=' -f2)
    DB_PASS=$(grep '^MYSQL_PASSWORD=' "$env_file" | cut -d '=' -f2)

    if [[ -z "$DB_NAME" || -z "$DB_USER" || -z "$DB_PASS" ]]; then
      echo -e "${RED}‚ùå Kh√¥ng th·ªÉ l·∫•y th√¥ng tin database t·ª´ .env, b·ªè qua site '$site'${NC}"
      continue
    fi

    # Backup database
    db_backup_file="$backup_target_dir/${site}_db.sql"
    echo -e "${YELLOW}üì¶ ƒêang backup database: $DB_NAME${NC}"
    docker exec "${site}-mariadb" sh -c "exec mysqldump -u$DB_USER -p\"$DB_PASS\" $DB_NAME" > "$db_backup_file" || {
      echo -e "${RED}‚ùå L·ªói khi backup database cho site '$site'${NC}"
      continue
    }

    # Backup m√£ ngu·ªìn
    echo -e "${YELLOW}üì¶ ƒêang n√©n m√£ ngu·ªìn WordPress...${NC}"
    tar -czf "$backup_target_dir/${site}_wordpress.tar.gz" -C "$wordpress_dir" . || {
      echo -e "${RED}‚ùå L·ªói khi n√©n m√£ ngu·ªìn cho site '$site'${NC}"
      continue
    }

    echo -e "${GREEN}‚úÖ Backup site '$site' ho√†n t·∫•t t·∫°i: $backup_target_dir${NC}"
  done
}

# üßπ Xo√° container ch√≠nh
remove_core_containers() {
  echo -e "${YELLOW}üßπ ƒêang xo√° c√°c container ch√≠nh: nginx-proxy v√† redis-cache...${NC}"
  docker rm -f "$NGINX_PROXY_CONTAINER" redis-cache 2>/dev/null || true
}

# üßπ Xo√° to√†n b·ªô container v√† volume li√™n quan t·ªõi t·ª´ng site
remove_site_containers() {
  for site in $(get_site_list); do
    echo -e "${YELLOW}üß® ƒêang xo√° container cho site: $site${NC}"
    docker rm -f "$site-php" "$site-mariadb" 2>/dev/null || true
    docker volume rm "${site}_db_data" 2>/dev/null || true
  done
}

# üß® Xo√° to√†n b·ªô th∆∞ m·ª•c tr·ª´ backup
remove_all_except_backup() {
  echo -e "${MAGENTA}üóëÔ∏è  ƒêang xo√° to√†n b·ªô h·ªá th·ªëng tr·ª´ th∆∞ m·ª•c backup_before_remove...${NC}"
  for item in "$BASE_DIR"/*; do
    [[ "$item" == "$BACKUP_DIR" ]] && continue
    rm -rf "$item"
  done
}

# üßæ Hi·ªÉn th·ªã container c√≤n l·∫°i sau khi xo√°
show_remaining_containers() {
  echo -e "\n${CYAN}üìã Danh s√°ch container c√≤n l·∫°i sau khi g·ª° c√†i ƒë·∫∑t:${NC}"
  remaining=$(docker ps -a --format '{{.Names}}')
  if [[ -z "$remaining" ]]; then
    echo -e "${GREEN}‚úÖ Kh√¥ng c√≤n container Docker n√†o.${NC}"
  else
    docker ps -a
    echo -e "\n${YELLOW}üí° N·∫øu b·∫°n mu·ªën xo√° h·∫øt container c√≤n s√≥t l·∫°i, h√£y ch·∫°y c√°c l·ªánh sau:${NC}"
    echo "$remaining" | while read -r name; do
      echo "docker stop $name && docker rm $name"
    done
  fi
}

# ================================
# üöÄ Ti·∫øn tr√¨nh ch√≠nh
# ================================

echo -e "${RED}‚ö†Ô∏è C·∫¢NH B√ÅO: Script n√†y s·∫Ω xo√° to√†n b·ªô h·ªá th·ªëng WP Docker LEMP!${NC}"
echo "Bao g·ªìm to√†n b·ªô site, container, volume, m√£ ngu·ªìn, SSL, c·∫•u h√¨nh."

if confirm_action; then
  backup_all_sites
else
  echo -e "${YELLOW}‚è© B·ªè qua b∆∞·ªõc sao l∆∞u.${NC}"
fi

remove_core_containers
remove_site_containers
remove_all_except_backup

echo -e "\n${GREEN}‚úÖ ƒê√£ g·ª° c√†i ƒë·∫∑t to√†n b·ªô h·ªá th·ªëng. Backup (n·∫øu c√≥) n·∫±m trong: $BACKUP_DIR${NC}"

show_remaining_containers