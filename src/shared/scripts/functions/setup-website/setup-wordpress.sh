#!/bin/bash

# =====================================
# üì£ Script c√†i ƒë·∫∑t WordPress cho website ƒë√£ t·∫°o
# =====================================

set -euo pipefail

# üîç Load config
CONFIG_FILE="shared/config/config.sh"
while [ ! -f "$CONFIG_FILE" ]; do
  CONFIG_FILE="../$CONFIG_FILE"
  if [ "$(pwd)" = "/" ]; then
    echo "‚ùå Kh√¥ng t√¨m th·∫•y config.sh" >&2
    exit 1
  fi
done
source "$CONFIG_FILE"

# ‚úâÔ∏è Nh·∫≠n tham s·ªë site
site_name="${1:-}"
if [[ -z "$site_name" ]]; then
  echo -e "${RED}‚ùå Thi·∫øu tham s·ªë t√™n site.${NC}"
  exit 1
fi

# üóÇÔ∏è X√°c ƒë·ªãnh th∆∞ m·ª•c ch·ª©a .env
SITE_DIR="$SITES_DIR/$site_name"
ENV_FILE="$SITE_DIR/.env"

# N·∫øu kh√¥ng t√¨m th·∫•y trong sites/, th·ª≠ t√¨m trong tmp/
if [[ ! -f "$ENV_FILE" ]]; then
  tmp_env_path=$(find "$TMP_DIR" -maxdepth 1 -type d -name "${site_name}_*" | head -n 1)
  if [[ -n "$tmp_env_path" && -f "$tmp_env_path/.env" ]]; then
    ENV_FILE="$tmp_env_path/.env"
    SITE_DIR="$tmp_env_path"
  else
    echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y file .env cho site '$site_name'${NC}"
    exit 1
  fi
fi
ENV_FILE_DIR=$(dirname "$ENV_FILE")

# ‚Ü∫ Load bi·∫øn t·ª´ .env
DOMAIN=$(fetch_env_variable "$ENV_FILE" "DOMAIN")
DB_NAME=$(fetch_env_variable "$ENV_FILE" "MYSQL_DATABASE")
DB_USER=$(fetch_env_variable "$ENV_FILE" "MYSQL_USER")
DB_PASS=$(fetch_env_variable "$ENV_FILE" "MYSQL_PASSWORD")
PHP_VERSION=$(fetch_env_variable "$ENV_FILE" "PHP_VERSION")

# ‚öñÔ∏è Container
PHP_CONTAINER="${site_name}-php"
DB_CONTAINER="${site_name}-mariadb"
SITE_URL="https://$DOMAIN"

# üîê Nh·∫≠p th√¥ng tin qu·∫£n tr·ªã
read -p "üë§ B·∫°n c√≥ mu·ªën h·ªá th·ªëng t·ª± t·∫°o t√†i kho·∫£n admin m·∫°nh? [Y/n]: " auto_gen
auto_gen="${auto_gen:-Y}"
auto_gen="$(echo "$auto_gen" | tr '[:upper:]' '[:lower:]')"

if [[ "$auto_gen" == "n" ]]; then
  read -p "üë§ Nh·∫≠p t√™n ng∆∞·ªùi d√πng admin: " ADMIN_USER
  while [[ -z "$ADMIN_USER" ]]; do
    echo "‚ö†Ô∏è Kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng."
    read -p "üë§ Nh·∫≠p t√™n ng∆∞·ªùi d√πng admin: " ADMIN_USER
  done
  read -s -p "üîê Nh·∫≠p m·∫≠t kh·∫©u admin: " ADMIN_PASSWORD; echo
  read -s -p "üîê Nh·∫≠p l·∫°i m·∫≠t kh·∫©u: " CONFIRM_PASSWORD; echo
  while [[ "$ADMIN_PASSWORD" != "$CONFIRM_PASSWORD" || -z "$ADMIN_PASSWORD" ]]; do
    echo "‚ö†Ô∏è M·∫≠t kh·∫©u kh√¥ng kh·ªõp ho·∫∑c r·ªóng. Vui l√≤ng th·ª≠ l·∫°i."
    read -s -p "üîê Nh·∫≠p m·∫≠t kh·∫©u admin: " ADMIN_PASSWORD; echo
    read -s -p "üîê Nh·∫≠p l·∫°i m·∫≠t kh·∫©u: " CONFIRM_PASSWORD; echo
  done
  read -p "üìß Nh·∫≠p email admin (ENTER ƒë·ªÉ d√πng admin@$site_name.local): " ADMIN_EMAIL
  ADMIN_EMAIL="${ADMIN_EMAIL:-admin@$site_name.local}"
else
  ADMIN_USER="admin-$(openssl rand -base64 6 | tr -dc 'a-zA-Z0-9' | head -c 8)"
  ADMIN_PASSWORD="$(openssl rand -base64 18 | tr -dc 'a-zA-Z0-9' | head -c 16)"
  ADMIN_EMAIL="admin@$site_name.local"
fi

# ‚ú® Th√¥ng b√°o b·∫Øt ƒë·∫ßu
echo -e "${BLUE}‚ñπ B·∫Øt ƒë·∫ßu c√†i ƒë·∫∑t WordPress cho '$site_name'...${NC}"

# ‚è≥ Ki·ªÉm tra container PHP s·∫µn s√†ng
echo -e "${YELLOW}‚è≥ ƒêang ch·ªù container PHP '$PHP_CONTAINER' kh·ªüi ƒë·ªông...${NC}"
timeout=30
while ! is_container_running "$PHP_CONTAINER"; do
  sleep 1
  ((timeout--))
  if (( timeout <= 0 )); then
    echo -e "${RED}‚ùå Container PHP '$PHP_CONTAINER' kh√¥ng s·∫µn s√†ng sau 30s.${NC}"
    exit 1
  fi
  echo -ne "‚è≥ ƒêang ch·ªù container PHP... ($((30-timeout))/30)\r"
done

# üì¶ T·∫£i m√£ ngu·ªìn WordPress n·∫øu ch∆∞a c√≥
if [[ ! -f "$SITE_DIR/wordpress/index.php" ]]; then
  echo -e "${YELLOW}üì¶ ƒêang t·∫£i WordPress...${NC}"

  # Ki·ªÉm tra th∆∞ m·ª•c ƒë√≠ch trong container tr∆∞·ªõc khi t·∫£i
  docker exec -i "$PHP_CONTAINER" sh -c "mkdir -p /var/www/html && chown -R nobody:nogroup /var/www/html"
  
  # T·∫£i v√† gi·∫£i n√©n WordPress v√†o th∆∞ m·ª•c ƒë√∫ng
  docker exec -i "$PHP_CONTAINER" sh -c "curl -o /var/www/html/wordpress.tar.gz -L https://wordpress.org/latest.tar.gz && \
    tar -xzf /var/www/html/wordpress.tar.gz --strip-components=1 -C /var/www/html && rm /var/www/html/wordpress.tar.gz"

  echo -e "${GREEN}‚úÖ ƒê√£ t·∫£i m√£ ngu·ªìn WordPress.${NC}"
else
  echo -e "${GREEN}‚úÖ M√£ ngu·ªìn WordPress ƒë√£ c√≥ s·∫µn.${NC}"
fi

# ‚öôÔ∏è C√†i ƒë·∫∑t wp-config
wp_set_wpconfig "$PHP_CONTAINER" "$DB_NAME" "$DB_USER" "$DB_PASS" "$DB_CONTAINER"

# üöÄ C√†i ƒë·∫∑t WordPress
wp_install "$PHP_CONTAINER" "$SITE_URL" "$site_name" "$ADMIN_USER" "$ADMIN_PASSWORD" "$ADMIN_EMAIL"

# üõ†Ô∏è Ph√¢n quy·ªÅn & t·ªëi ∆∞u
if is_container_running "$PHP_CONTAINER"; then
  docker exec -u root "$PHP_CONTAINER" chown -R nobody:nogroup "/var/www/" || {
    echo -e "${RED}‚ùå Ph√¢n quy·ªÅn th·∫•t b·∫°i.${NC}"
    exit 1
  }
else
  echo -e "${RED}‚ùå B·ªè qua chown v√¨ container ch∆∞a s·∫µn s√†ng.${NC}"
fi

wp_set_permalinks "$PHP_CONTAINER" "$SITE_URL"
# wp_plugin_install_performance_lab "$PHP_CONTAINER" # B·∫≠t n·∫øu c·∫ßn

# üìù Ghi l·∫°i th√¥ng tin
cat > "$ENV_FILE_DIR/.wp-info" <<EOF
üåç Website URL:   $SITE_URL
üîë Admin URL:     $SITE_URL/wp-admin
üë§ Admin User:    $ADMIN_USER
üîí Admin Pass:    $ADMIN_PASSWORD
üìß Admin Email:   $ADMIN_EMAIL
EOF
