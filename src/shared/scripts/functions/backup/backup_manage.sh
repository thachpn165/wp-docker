# backup_manage: Qu·∫£n l√Ω backup, c√≥ th·ªÉ li·ªát k√™ ho·∫∑c x√≥a c√°c backup c≈© d·ª±a tr√™n tham s·ªë
backup_manage() {
    local site_name="$1"
    local backup_dir="$SITES_DIR/$site_name/backups"
    local action="$2"
    local max_age_days="${3:-7}" 

    # Ki·ªÉm tra th∆∞ m·ª•c backup t·ªìn t·∫°i
    if [[ ! -d "$backup_dir" ]]; then
        echo "‚ùå Directory $backup_dir not found!"
        return 1
    fi

    case "$action" in
        "list")
            # Li·ªát k√™ c√°c file backup
            echo "Listing backups for $site_name in $backup_dir:"

            # Determine operating system (macOS or Linux)
            if [[ "$(uname)" == "Darwin" ]]; then
                FIND_CMD="ls -lt $backup_dir | awk '{print \$6, \$7, \$8, \$9}'"
            else
                FIND_CMD="find $backup_dir -type f -printf '%TY-%Tm-%Td %TH:%TM %p\n' | sort -r"
            fi

            # Li·ªát k√™ FILE BACKUP (t·∫≠p tin .tar.gz)
            echo -e "${YELLOW}üìÇ FILE BACKUP (tar.gz files):${NC}"
            eval $FIND_CMD | grep ".tar.gz"
            if [[ $? -eq 0 ]]; then
                echo "‚úÖ File backup listing completed."
            else
                echo "‚ùå Error listing file backups."
            fi
            
            # Li·ªát k√™ DATABASE BACKUP (t·∫≠p tin .sql)
            echo -e "${YELLOW}üìÇ DATABASE BACKUP (sql files):${NC}"
            eval $FIND_CMD | grep ".sql"
            if [[ $? -eq 0 ]]; then
                echo "‚úÖ Database backup listing completed."
            else
                echo "‚ùå Error listing database backups."
            fi
            ;;
        "clean")
            # X√≥a c√°c file backup c≈©
            echo "Cleaning old backups older than $max_age_days days in $backup_dir"
            find "$backup_dir" -type f -name "*.tar.gz" -mtime +$max_age_days -exec rm -f {} \;
            if [[ $? -eq 0 ]]; then
                echo "‚úÖ Old backups older than $max_age_days days have been removed from $backup_dir."
            else
                echo "‚ùå Error removing old backups."
                return 1
            fi
            ;;
        *)
            echo "‚ùå Invalid action: $action. Use 'list' or 'clean'."
            return 1
            ;;
    esac
}