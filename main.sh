#!/bin/bash

CONFIG_FILE="shared/config/config.sh"

# X√°c ƒë·ªãnh ƒë∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi c·ªßa `config.sh`
while [ ! -f "$CONFIG_FILE" ]; do
    CONFIG_FILE="../$CONFIG_FILE"
    if [ "$(pwd)" = "/" ]; then
        echo "‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y config.sh!" >&2
        exit 1
    fi
done

source "$CONFIG_FILE"

# **Ch·∫°y setup h·ªá th·ªëng tr∆∞·ªõc khi hi·ªÉn th·ªã menu**
bash "$SCRIPTS_DIR/setup-system.sh"

# M√†u s·∫Øc terminal
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
MAGENTA='\033[1;35m'
CYAN='\033[1;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# Bi·ªÉu t∆∞·ª£ng Unicode
ARROW="\xE2\x96\xB6"

# **H√†m hi·ªÉn th·ªã ti√™u ƒë·ªÅ**
print_header() {
    echo -e "${MAGENTA}==============================================${NC}"
    echo -e "${MAGENTA}        üöÄ ${CYAN}WordPress Docker LEMP Stack üöÄ        ${NC}"
    echo -e "${MAGENTA}==============================================${NC}"
    echo -e "${BLUE}üîç Ki·ªÉm tra h·ªá th·ªëng...${NC}"

    # Hi·ªÉn th·ªã tr·∫°ng th√°i h·ªá th·ªëng
    if is_docker_running; then
        echo -e "${GREEN}‚úÖ Docker ƒëang ch·∫°y${NC}"
    else
        echo -e "${RED}‚ùå Docker kh√¥ng ch·∫°y!${NC}"
    fi

    if is_network_exists "$DOCKER_NETWORK"; then
        echo -e "${GREEN}‚úÖ M·∫°ng '$DOCKER_NETWORK' ƒë√£ t·ªìn t·∫°i${NC}"
    else
        echo -e "${RED}‚ùå M·∫°ng '$DOCKER_NETWORK' ch∆∞a ƒë∆∞·ª£c t·∫°o!${NC}"
    fi

    if is_container_running "$NGINX_PROXY_CONTAINER"; then
        echo -e "${GREEN}‚úÖ NGINX Proxy ƒëang ch·∫°y${NC}"
    else
        echo -e "${RED}‚ùå NGINX Proxy kh√¥ng ch·∫°y!${NC}"
    fi
}

# **Hi·ªÉn th·ªã menu qu·∫£n l√Ω website**
manage_website_menu() {
    while true; do
        clear
        echo -e "${YELLOW}===== QU·∫¢N L√ù WEBSITE WORDPRESS =====${NC}"
        echo -e "${GREEN}[1]${NC} ‚ûï T·∫°o Website M·ªõi"
        echo -e "${GREEN}[2]${NC} üóëÔ∏è X√≥a Website"
        echo -e "${GREEN}[3]${NC} üìã Danh S√°ch Website"
        echo -e "${GREEN}[4]${NC} üîÑ Restart Website"
        echo -e "${GREEN}[5]${NC} üìÑ Xem Logs Website"
        echo -e "${GREEN}[6]${NC} ‚¨ÖÔ∏è Quay l·∫°i"
        echo ""

        read -p "Ch·ªçn m·ªôt ch·ª©c nƒÉng (1-6): " sub_choice
        case $sub_choice in
            1) bash "$WEBSITE_MGMT_DIR/create-website.sh"; read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..." ;;
            2) bash "$WEBSITE_MGMT_DIR/delete-website.sh"; read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..." ;;
            3) bash "$WEBSITE_MGMT_DIR/list-websites.sh"; read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..." ;;
            4) bash "$WEBSITE_MGMT_DIR/restart-website.sh"; read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..." ;;
            5) bash "$WEBSITE_MGMT_DIR/logs-website.sh"; read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..." ;;
            6) break ;;
            *) echo -e "${RED}‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!${NC}" && sleep 2 ;;
        esac
    done
}

# **Hi·ªÉn th·ªã menu ch√≠nh**
while true; do
    clear
    print_header
    echo -e "${BLUE}MENU CH√çNH:${NC}"
    echo -e "  ${GREEN}[1]${NC} üåç Qu·∫£n l√Ω Website WordPress"
    echo -e "  ${GREEN}[2]${NC} üîê Qu·∫£n l√Ω Ch·ª©ng Ch·ªâ SSL"
    echo -e "  ${GREEN}[3]${NC} ‚öôÔ∏è C√¥ng C·ª• H·ªá Th·ªëng"
    echo -e "  ${GREEN}[4]${NC} ‚ùå Tho√°t"
    echo ""

    read -p "Ch·ªçn m·ªôt ch·ª©c nƒÉng (1-4): " choice
    case $choice in
        1) manage_website_menu ;;
        2) manage_ssl_menu ;;
        3) system_tools_menu ;;
        4) echo -e "${GREEN}‚ùå Tho√°t ch∆∞∆°ng tr√¨nh.${NC}" && exit 0 ;;
        *) echo -e "${RED}‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.${NC}" && sleep 2 ;;
    esac
done
