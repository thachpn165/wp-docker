#!/bin/bash

# X√°c ƒë·ªãnh th∆∞ m·ª•c g·ªëc c·ªßa d·ª± √°n (d√π user ch·∫°y script t·ª´ ƒë√¢u)
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SCRIPTS_DIR="$PROJECT_ROOT/shared/scripts"

# M√†u s·∫Øc terminal
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
MAGENTA='\033[1;35m'
CYAN='\033[1;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# Bi·ªÉu t∆∞·ª£ng Unicode
CHECK_MARK="\xE2\x9C\x94"
ARROW="\xE2\x96\xB6"

# Ki·ªÉm tra h·ªá ƒëi·ªÅu h√†nh
OS_TYPE=$(uname -s)

# L·∫•y th√¥ng tin CPU
if [[ "$OS_TYPE" == "Linux" ]]; then
    cpu_cores=$(nproc)
elif [[ "$OS_TYPE" == "Darwin" ]]; then
    cpu_cores=$(sysctl -n hw.ncpu)
else
    cpu_cores="N/A"
fi

# L·∫•y th√¥ng tin RAM
if [[ "$OS_TYPE" == "Linux" ]]; then
    total_ram=$(awk '/MemTotal/ {print $2/1024 " MB"}' /proc/meminfo)
    free_ram=$(awk '/MemAvailable/ {print $2/1024 " MB"}' /proc/meminfo)
elif [[ "$OS_TYPE" == "Darwin" ]]; then
    total_ram=$(sysctl -n hw.memsize | awk '{print $1/1024/1024 " MB"}')
    free_ram="Kh√¥ng kh·∫£ d·ª•ng tr√™n macOS"
else
    total_ram="N/A"
    free_ram="N/A"
fi

# L·∫•y th√¥ng tin dung l∆∞·ª£ng ·ªï c·ª©ng
if [[ "$OS_TYPE" == "Linux" || "$OS_TYPE" == "Darwin" ]]; then
    disk_space=$(df -h / | awk 'NR==2 {print $4}')
else
    disk_space="N/A"
fi

# L·∫•y phi√™n b·∫£n Docker
docker_version=$(docker --version | awk '{print $3}' | sed 's/,//')

# Ki·ªÉm tra Docker c√≥ ƒëang ch·∫°y kh√¥ng
if ! docker info >/dev/null 2>&1; then
    echo -e "${RED}‚ö†Ô∏è Docker ch∆∞a ch·∫°y! Vui l√≤ng kh·ªüi ƒë·ªông Docker tr∆∞·ªõc khi s·ª≠ d·ª•ng.${NC}"
    exit 1
fi

# H√†m hi·ªÉn th·ªã ti√™u ƒë·ªÅ lung linh
print_header() {
    echo -e "${MAGENTA}==============================================${NC}"
    echo -e "${MAGENTA}        üöÄ ${CYAN}WordPress Docker LEMP Stack üöÄ        ${NC}"
    echo -e "${MAGENTA}==============================================${NC}"
}

# Hi·ªÉn th·ªã th√¥ng tin h·ªá th·ªëng
show_system_info() {
    echo -e "${YELLOW}${ARROW} H·ªá ƒëi·ªÅu h√†nh: ${WHITE}$OS_TYPE${NC}"
    echo -e "${YELLOW}${ARROW} CPU Cores: ${WHITE}$cpu_cores${NC}"
    echo -e "${YELLOW}${ARROW} T·ªïng RAM: ${WHITE}$total_ram${NC}"
    echo -e "${YELLOW}${ARROW} RAM tr·ªëng: ${WHITE}$free_ram${NC}"
    echo -e "${YELLOW}${ARROW} ·ªî c·ª©ng tr·ªëng: ${WHITE}$disk_space${NC}"
    echo -e "${YELLOW}${ARROW} Docker Version: ${WHITE}$docker_version${NC}"
    echo ""
}

# Hi·ªÉn th·ªã menu ch√≠nh
while true; do
    clear
    print_header
    show_system_info

    echo -e "${BLUE}MENU CH√çNH:${NC}"
    echo -e "  ${GREEN}[1]${NC} üåç Qu·∫£n l√Ω Website WordPress"
    echo -e "  ${GREEN}[2]${NC} üîê Qu·∫£n l√Ω Ch·ª©ng Ch·ªâ SSL"
    echo -e "  ${GREEN}[3]${NC} ‚öôÔ∏è C√¥ng C·ª• H·ªá Th·ªëng"
    echo -e "  ${GREEN}[4]${NC} ‚ùå Tho√°t"
    echo ""
    
    read -p "Vui l√≤ng ch·ªçn m·ªôt ch·ª©c nƒÉng (1-4): " choice

    case $choice in
        1) 
            while true; do
                clear
                echo -e "${YELLOW}===== QU·∫¢N L√ù WEBSITE WORDPRESS =====${NC}"
                echo -e "${GREEN}[1]${NC} ‚ûï T·∫°o Website M·ªõi"
                echo -e "${GREEN}[2]${NC} üóëÔ∏è X√≥a Website"
                echo -e "${GREEN}[3]${NC} üìã Danh S√°ch Website"
                echo -e "${GREEN}[4]${NC} üîÑ Restart Website"
                echo -e "${GREEN}[5]${NC} üìÑ Xem Logs Website"
                echo -e "${GREEN}[6]${NC} ‚¨ÖÔ∏è Quay l·∫°i"
                echo ""
                read -p "Vui l√≤ng ch·ªçn m·ªôt ch·ª©c nƒÉng (1-6): " sub_choice

                case $sub_choice in
                    1) bash "$SCRIPTS_DIR/create-website.sh" ;;
                    2) bash "$SCRIPTS_DIR/delete-website.sh" ;;
                    3) bash "$SCRIPTS_DIR/list-websites.sh" ;;
                    4) bash "$SCRIPTS_DIR/restart-website.sh" ;;
                    5) bash "$SCRIPTS_DIR/logs-website.sh" ;;
                    6) break ;;
                    *) echo -e "${RED}‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!${NC}" && sleep 2 ;;
                esac
            done
        ;;
        4) echo -e "${GREEN}‚ùå Tho√°t ch∆∞∆°ng tr√¨nh.${NC}" && exit 0 ;;
        *) echo -e "${RED}‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.${NC}" && sleep 2 ;;
    esac
done
